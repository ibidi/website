{"file":"index-YBL09H7n.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,UAAM,QAAQ;AAQR,UAAA,YAAY,IAA8B,IAAI;AACjC,QAAmB,IAAI;AACpC,UAAA,cAAc,IAAY,CAAC;AAC3B,UAAA,cAAc,IAAY,CAAC;AACjC,UAAM,aAAa,IAAgB,EAAE,GAAG,GAAG,GAAG,GAAG;AAC3C,UAAA,mBAAmB,IAAuB,IAAI;AAEpD,UAAM,WAAW,MAAM;AACrB,YAAM,SAAS,UAAU;AACzB,UAAI,CAAC,OAAQ;AACP,YAAA,MAAM,OAAO,WAAW,IAAI;AAClC,UAAI,CAAC,IAAK;AAEV,UAAI,UAAU,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAEhC,WAAK,MAAM,WAAW,MAAM,IAAI,MAAM,UAAU,IAAI,MAAM;AAC1D,WAAK,MAAM,WAAW,MAAM,IAAI,MAAM,UAAU,IAAI,MAAM;AAEzE,eAAS,IAAI,GAAG,IAAI,YAAY,OAAO,KAAK;AAC1C,iBAAS,IAAI,GAAG,IAAI,YAAY,OAAO,KAAK;AAC1C,gBAAM,UAAU,IAAI,MAAM,aAAc,WAAW,MAAM,IAAI,MAAM;AACnE,gBAAM,UAAU,IAAI,MAAM,aAAc,WAAW,MAAM,IAAI,MAAM;AAGjE,cAAA,iBAAiB,SACjB,MAAM,iBAAiB,MAAM,KAC7B,MAAM,iBAAiB,MAAM,GAC7B;AACA,gBAAI,YAAY,MAAM;AACtB,gBAAI,SAAS,SAAS,SAAS,MAAM,YAAY,MAAM,UAAU;AAAA,UAAA;AAGnE,cAAI,cAAc,MAAM;AACxB,cAAI,WAAW,SAAS,SAAS,MAAM,YAAY,MAAM,UAAU;AAAA,QAAA;AAAA,MACrE;AAGF,YAAM,WAAW,IAAI;AAAA,QACnB,OAAO,QAAQ;AAAA,QACf,OAAO,SAAS;AAAA,QAChB;AAAA,QACA,OAAO,QAAQ;AAAA,QACf,OAAO,SAAS;AAAA,QAChB,KAAK,KAAK,OAAO,SAAS,IAAI,OAAO,UAAU,CAAC,IAAI;AAAA,MACtD;AAES,eAAA,aAAa,GAAG,qBAAqB;AACrC,eAAA,aAAa,GAAG,SAAS;AAElC,UAAI,YAAY;AAChB,UAAI,SAAS,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAAA,IAChD;AA2DA,UAAM,eAAe,MAAM;AACzB,YAAM,SAAS,UAAU;AACzB,UAAI,CAAC,OAAQ;AACb,aAAO,QAAQ,OAAO;AACtB,aAAO,SAAS,OAAO;AACvB,kBAAY,QAAQ,KAAK,KAAK,OAAO,QAAQ,MAAM,UAAU,IAAI;AACjE,kBAAY,QAAQ,KAAK,KAAK,OAAO,SAAS,MAAM,UAAU,IAAI;AACzD,eAAA;AAAA,IACX;AA2BA,UAAM,MAAM,CAAC,MAAM,WAAW,MAAM,OAAO,MAAM,aAAa,MAAM,gBAAgB,MAAM,UAAU,GAAG,MAAM;AAG3G,UAAI,UAAU,OAAO;AAGN,qBAAA;AAAA,MAAA;AAAA,IACf,GACC,EAAE,MAAM,MAAM;;;iBAtLH;AAAA,QAAJ,KAAI;AAAA,QAAY,OAAM;AAAA,MAAA;;;;;;;;;;;;;;;AC2E1B,UAAA,QAAQ,IAAuB,IAAI;AACnC,UAAA,QAAQ,IAAS,IAAI;AAgB3B,aAAS,WAAW,YAA6B;AAC3C,UAAA,CAAC,WAAmB,QAAA;AACxB,YAAM,UAAsC,EAAE,MAAM,WAAW,OAAO,QAAQ,KAAK,UAAU;AAC7F,aAAO,IAAI,KAAK,UAAU,EAAE,mBAAmB,SAAS,OAAO;AAAA,IAAA;AAGxD,aAAA,oBAAoB,MAAe,YAAoB,KAAa;AACvE,UAAA,CAAC,KAAa,QAAA;AACd,UAAA,KAAK,UAAU,WAAW;AACrB,eAAA;AAAA,MAAA;AAET,aAAO,KAAK,UAAU,GAAG,SAAS,IAAI;AAAA,IAAA;;;AAvGjC,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,qCAAiC,MAAA,CAAA,CAAA,wMAAA;UAK7B,MAAK,SAAI,MAAK,MAAC,QAAM;;AAEbC,sBAAA,MAAA,QAAR,SAAI;;AAIgE,cAAA,KAAK,YAAU;;cAA/E,IAAI,KAAK;AAAA,cAAO,OAAM;AAAA,YAAA;+BAAjC,CAEW,GAAAC,QAAAC,UAAA,aAAA;;8CADH,OAAK,KAAK,UAAU,kBAAG,OAAK,KAAK,SAAK,uBAAA;;;oBAA5CC,YAAsK,OAAA;AAAA,sBAAhK,KAAK,KAAK;AAAA,sBAAa,KAAK,KAAK,SAAK;AAAA,sBAA6B,OAAM;AAAA;;;;;;;;;;;YAMpE,IAAI,KAAK;AAAA,YAAO,OAAM;AAAA,UAAA;6BAAjC,CAIW,GAAAF,QAAAC,UAAA,aAAA;;4MAFJE,eAAA,KAAK,SAAK,eAAA;;;kBADfD,YAEK,QAFD,OAAM,6IAAA,GACLE,gBAAA,KAAK,SAAK,eAAA,GAAA,CAAA;AAAA;;;;;AAGR,cAAA,KAAK,aAAW;uIACpB,oBAAoB,KAAK,aAAW,GAAA,CAAA,CAAA,MAAA;AAAA,UAAA;;;8NAO5B,WAAW,KAAK,IAAI,CAAA,CAAA,SAAA;AACjB,cAAA,KAAK,QAAQ,KAAK,KAAK,QAAM;;;;;AAC7B,cAAA,KAAK,QAAQ,KAAK,KAAK,QAAM;yEACpC,KAAK,KAAK,KAAI,IAAA,CAAA,CAAA,SAAA;AAAA,UAAA;;;;;YAGV,IAAI,KAAK;AAAA,YAAO,OAAM;AAAA,UAAA;6BAAjC,CAEW,GAAAJ,QAAAC,UAAA,aAAA;;;;;kCAF8G,eAEzH;AAAA;;;;;;;;iBAKQ,MAAK,OAAA;;;;;;;QAQjB,IAAG;AAAA,QACH,OAAM;AAAA,MAAA;yBAFR,CAKW,GAAAD,QAAAC,UAAA,aAAA;;;;;8BAFV,kBAED;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBR,UAAM,QAAQ;AASR,UAAA,YAAY,IAAwB,IAAI;AACxC,UAAA,WAAW,IAAI,KAAK;AAEpB,UAAA,WAAW,SAAS,MAAM;AAC1B,UAAA,MAAM,cAAc,WAAW;AAC1B,eAAA,MAAM,KAAK,MAAM,EAAE;AAAA,MAAA;AAG5B,YAAM,QAAQ,MAAM,KAAK,MAAM,GAAG;AAClC,YAAM,SAAmB,CAAC;AACpB,YAAA,QAAQ,CAAC,MAAM,UAAU;AAC7B,eAAO,KAAK,IAAI;AACZ,YAAA,QAAQ,MAAM,SAAS,GAAG;AAC5B,iBAAO,KAAK,GAAG;AAAA,QAAA;AAAA,MACjB,CACD;AACM,aAAA;AAAA,IAAA,CACR;AAED;AAAA,MACE;AAAA,MACA,CAAC,CAAC,EAAE,eAAA,CAAgB,MAAM;AACpB,YAAA,kBAAkB,CAAC,SAAS,OAAO;AACrC,mBAAS,QAAQ;AAEjB,cAAI,UAAU,OAAO;AACT,sBAAA,MAAM,UAAU,IAAI,SAAS;AAAA,UAAA;AAAA,QACzC;AAAA,MAEJ;AAAA,MACA,EAAE,WAAW,IAAI;AAAA,IACnB;AAEA,QAAI,gBAAgB;AACd,UAAA,sBAAsB,CAAC,OAAgB;;AAG3C;AACI,UAAA,kBAAkB,SAAS,MAAM,QAAQ;AAC3C,oBAAM,wBAAN;AAAA,MAA4B;AAAA,IAEhC;;gEAzFkBI,KAAG,GAAA,GAAAP,WAAA;AAAA,iBAAM;AAAA,QAAJ,KAAI;AAAA,QAAa,6BAA6BQ,KAAS,SAAA;AAAA;yBAA5E,CAqBY,GAAAN,QAAAC,UAAA,aAAA;;;cAlBR,MAAK;AAAA,cACL,OAAM;AAAA,YAAA;0BAIuB,SAAQ,OAAA,CAA3B,SAAS,UAAK;;gBAGoB,mBAAA,GAAA,QAAQM,KAAK,KAAA;AAAA,yCAAyCC,KAAQ,QAAA;AAAA,+BAA+BC,KAAS,cAAA,QAAA,UAAA;AAAA,cAAA,MAK/IC,cAAA,cAAY,KAAK,gCAEfP,eAAA,wBAA6B,OAAO;;;;;cAjB3CD,YAmBkBS,iBAAA;AAAA,gBAlBhB,KAAI;AAAA,gBACJ,MAAK;AAAA,gBACL,OAAM;AAAA,gBACL,cAAa;AAAA,cAAA;iCAGZ,MAAoC;AAAA,mBADtCC,UAAA,IAAA,GAAAC,YAYOC,UAXsB,MAAAC,WAAA,SAAA,OAAnB,CAAA,SAAS,UAAK;wCADxBF,YAYO,QAAA;AAAA,sBAVJ,KAAK;AAAA,sBACN,OAAM;AAAA,sBACL,OAAK;AAAA,wBAAoC,mBAAA,GAAA,QAAQN,KAAK,KAAA;AAAA,iDAAyCC,KAAQ,QAAA;AAAA,uCAA+BC,KAAS,cAAA,QAAA,UAAA;AAAA;sBAK/I,cAAY;AAAA,oBAAA,GAEVL,gBAAA,wBAA6B,OAAO,GAAA,IAAA,CAAA,YAAA,CAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQ/C,UAAM,QAAQ;AAOd,UAAM,oBAAoB,SAAS,MAAM,GAAG,MAAM,KAAK,GAAG;;gEAhCjDC,KAAG,GAAA,GAAAP,WAAA;AAAA,QACP,OAAK,CAAA,gDAAA,EAAA,iBAAA,CAAuEkB,KAAQ,SAAA,GAAIV,KAAS,SAAA;AAAA,QACjG,OAAK;AAAA;;;;;6BAAwT,kBAAiB;AAAA,QAAA;AAAA;yBAHjV,CAYY,GAAAN,QAAAC,UAAA,aAAA;;qCADPgB,KAAI,IAAA,CAAA,EAAA;AAAA,UAAA;;8CAAJA,KAAI,IAAA,GAAA,CAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDX,SAAK,eAAe,aAAa;AAgBjC,UAAM,QAAQ;AAaR,UAAA,cAAc,IAA2B,IAAI;AACnD,QAAI,wBAA8C;AAClD,QAAI,gBAAwC;AAE5C,UAAM,UAAU,MAAM;AACpB,YAAM,KAAK,YAAY;AACvB,UAAI,CAAC,GAAI;AAGT,UAAI,uBAAuB;AACzB,8BAAsB,KAAK;AAAA,MAAA;AAE7B,UAAI,eAAe;AACjB,sBAAc,KAAK;AAAA,MAAA;AAGrB,YAAM,OAAO,MAAM,cAAc,eAAe,MAAM;AACtD,YAAM,SAAS,MAAM,UAAU,CAAC,MAAM,WAAW,MAAM;AACjD,YAAA,YAAY,IAAI,MAAM,aAAa;AAEzC,WAAK,IAAI,IAAI;AAAA,QACX,CAAC,IAAI,GAAG;AAAA,QACR,OAAO,MAAM;AAAA,QACb,SAAS,MAAM,iBAAiB,MAAM,iBAAiB;AAAA,MAAA,CACxD;AAEe,sBAAA,KAAK,GAAG,IAAI;AAAA,QAC1B,CAAC,IAAI,GAAG;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,QACT,UAAU,MAAM;AAAA,QAChB,MAAM,MAAM;AAAA,QACZ,OAAO,MAAM;AAAA,QACb,YAAY,MAAM;AAAA,QAClB,eAAe;AAAA,UACb,SAAS;AAAA,UACT,OAAO,OAAO,QAAQ;AAAA,UACtB,eAAe;AAAA,UACf,MAAM;AAAA,UACN,SAAS,MAAM;AAAA,UAAA;AAAA,QAEf;AAAA,MACF,CACD;AACD,8BAAwB,cAAc;AAAA,IACxC;AAUA;AAAA,MACE,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,MACR;AAAA,MACA,MAAM;AACJ,YAAI,YAAY,OAAO;AACb,kBAAA;AAAA,QAAA;AAAA,MAEZ;AAAA,MACA,EAAE,MAAM,KAAK;AAAA,IACf;;;iBAjHW;AAAA,QAAJ,KAAI;AAAA,MAAA;;;;;;;;;;;;;;;;;ACwSX,UAAM,SAAS,iBAAiB;AACjB,WAAO,OAAO;AACZ,WAAO,OAAO;AAoBzB,UAAA,kBAAkB,IAA4B,IAAI;AAClD,UAAA,eAAe,IAAmB,EAAE;AACpC,UAAA,aAAa,IAAmB,IAAI;AAE1C,UAAM,WAAW,SAAS,MAAA;;AAAM,cAAC,GAAC,qBAAgB,UAAhB,mBAAuB;AAAA,KAAU;AAEnE,aAAS,WAAW,YAAqB;AACnC,UAAA,CAAC,WAAmB,QAAA;AACpB,UAAA;AACI,cAAA,OAAO,IAAI,KAAK,UAAU;AAC1B,cAAA,0BAAU,KAAK;AACf,cAAA,WAAW,KAAK,IAAI,IAAI,YAAY,KAAK,SAAS;AACxD,cAAM,WAAW,KAAK,KAAK,YAAY,MAAO,KAAK,KAAK,GAAG;AAE3D,YAAI,aAAa,GAAG;AACX,iBAAA;AAAA,QAAA,WACE,WAAW,GAAG;AACvB,iBAAO,GAAG,QAAQ;AAAA,QAAA,OACb;AACE,iBAAA,KAAK,mBAAmB,SAAS;AAAA,YACtC,KAAK;AAAA,YACL,OAAO;AAAA,UAAA,CACR;AAAA,QAAA;AAAA,MACH,QACM;AACC,eAAA;AAAA,MAAA;AAAA,IACT;AA2F6B,QAAwB,IAAI;AA+CpD,WAAA;AAAA,MACL,OAAO;AAAA,MACP,aAAa;AAAA,IAAA,CACd;AAmBD,UAAM,OAAc;AAAA,MAClB;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,QACP,WAAW;AAAA,MACb;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAAA;AAAA,IAEX;AAEA,UAAM,aAA0B;AAAA,MAC9B;AAAA,QACE,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MACT;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,MAAM;AAAA,QACN,OAAO;AAAA;AAAA,MAAA;AAAA,IAEX;;;AA/jBO,YAAA,OAAApB,eAAAC,WAAA,EAAA,OAAM,wEAAoE,MAAA,CAAA,CAAA,GAAA;AAC5D,YAAAoB,mBAAA,iBAAA,EAAA,OAAM,iEAA6D,MAAA,OAAA,CAAA;;;QAK5E,MAAK;AAAA,QACL,KAAI;AAAA,QACJ,cAAW;AAAA,QACV,OAAO;AAAA,QACR,cAAW;AAAA,QACX,WAAU;AAAA,MAAA;6QAKmC,SAAQ,QAAA,mBAAA,cAAA,sBAAA,CAAA,6BAChD,SAAQ,QAAA,WAAA,SAAA;UAED,gBAAe,OAAA;;;UAEjB,MAAK;AAAA,UAAyB,OAAM;AAAA,QAAA;;UACpC,MAAK;AAAA,UAA4B,OAAM;AAAA,QAAA;;AAE/B,YAAA,gBAAA,MAAgB,KAAG;mCAC7B,QAAM,gBAAe,MAAC,GAAG,uFACxBf,eAAA,gBAAA,MAAgB,IAAI,OAASA,eAAA,gBAAA,MAAgB,MAAM;AAC1C,cAAA,gBAAA,MAAgB,YAAU;;;;;;;sCAKrCA,eAAA,gBAAA,MAAgB,IAAI,OAASA,eAAA,gBAAA,MAAgB,MAAM;AAC1C,cAAA,gBAAA,MAAgB,YAAU;;;;;;;;iBAIxB,CAAA,WAAA,UAAe,gBAAe,OAAA;;;UACtC,MAAK;AAAA,UAAyB,OAAM;AAAA,QAAA;;iBAG7B,WAAU,OAAA;;;UACjB,MAAK;AAAA,UAAe,OAAM;AAAA,QAAA;;;;;;;QAMpC,MAAK;AAAA,QACL,KAAI;AAAA,QACJ,cAAW;AAAA,QACV,OAAO;AAAA,MAAA;;QAIP,UAAU;AAAA,QACX,WAAU;AAAA,QACT,UAAU;AAAA,QACV,OAAO;AAAA,QACR,MAAK;AAAA,MAAA;yBALP,CA4BkB,GAAAH,QAAAC,UAAA,aAAA;;;;cAnBR,MAAK;AAAA,cAAe,OAAM;AAAA,YAAA;;;cAMxB,MAAK;AAAA,cAAqB,OAAM;AAAA,YAAA;;;cAGhC,MAAK;AAAA,cAAsB,OAAM;AAAA,YAAA;;;cAGjC,MAAK;AAAA,cAAuB,OAAM;AAAA,YAAA;;;cAGlC,MAAK;AAAA,cAAwB,OAAM;AAAA,YAAA;;;;cAjB7CC,YAoBI,OAAA,EApBC,OAAM,6BAAyB;AAAA,gBACpCA,YAGI,KAAA;AAAA,kBAHD,MAAK;AAAA,kBAAuB,OAAM;AAAA,gBAAA;kBACnCA,YAA8C,iBAAA;AAAA,oBAAxC,MAAK;AAAA,oBAAe,OAAM;AAAA,kBAAA;kCAAc,WAEhD;AAAA,gBAAA;gBAEAA,YAaM,OAAA,EAbD,OAAM,6BAAyB;AAAA,kBAClCA,YAEI,KAAA;AAAA,oBAFD,MAAK;AAAA,oBAA2B,QAAO;AAAA,oBAAS,OAAM;AAAA,kBAAA;oBACvDA,YAAkD,iBAAA;AAAA,sBAA5C,MAAK;AAAA,sBAAqB,OAAM;AAAA;;kBAExCA,YAEI,KAAA;AAAA,oBAFD,MAAK;AAAA,oBAAiC,QAAO;AAAA,oBAAS,OAAM;AAAA,kBAAA;oBAC7DA,YAAmD,iBAAA;AAAA,sBAA7C,MAAK;AAAA,sBAAsB,OAAM;AAAA;;kBAEzCA,YAEI,KAAA;AAAA,oBAFD,MAAK;AAAA,oBAAgC,QAAO;AAAA,oBAAS,OAAM;AAAA,kBAAA;oBAC5DA,YAAoD,iBAAA;AAAA,sBAA9C,MAAK;AAAA,sBAAuB,OAAM;AAAA;;kBAE1CA,YAEI,KAAA;AAAA,oBAFD,MAAK;AAAA,oBAAwC,QAAO;AAAA,oBAAS,OAAM;AAAA,kBAAA;oBACpEA,YAAqD,iBAAA;AAAA,sBAA/C,MAAK;AAAA,sBAAwB,OAAM;AAAA;;;;;;;;;;AAaxBH,oBAAA,OAAP,QAAG;4XAKC,OAAK,IAAI,KAAK,kBAAG,OAAK,IAAI,OAAO,6JAIiCI,eAAA,IAAI,OAAO;AACrE,YAAA,IAAI,WAAS;;;;;2EAE4BA,eAAA,IAAI,KAAK,4DACTA,eAAA,IAAI,IAAI;;;AAahDJ,oBAAA,aAAb,cAAS;4XAKL,OAAK,UAAU,KAAK,kBAAG,OAAK,UAAU,MAAM,wHAGoBI,eAAA,UAAU,MAAM,6DAC/BA,eAAA,UAAU,KAAK,4DACfA,eAAA,UAAU,IAAI;;;;QAoBjE,MAAK;AAAA,QAAyB,OAAM;AAAA,MAAA;;;QAiBpC,MAAK;AAAA,QAAmB,OAAM;AAAA,MAAA;;;QAiB9B,MAAK;AAAA,QAAe,OAAM;AAAA,MAAA;;;QAiB1B,MAAK;AAAA,QAAe,OAAM;AAAA,MAAA;;;;;QAwBlC,MAAK;AAAA,QAAyB,OAAM;AAAA,MAAA;;AAKnC,UAAA,aAAA,MAAa,SAAM,GAAA;;AAEVJ,sBAAA,aAAA,QAAT,UAAK;;AAOA,cAAA,MAAM,UAAQ;uCACnB,OAAK,MAAM,QAAQ,kBACnB,OAAG,GAAK,MAAM,IAAI,YAAA;;;;cAKb,MAAK;AAAA,cAA4B,OAAM;AAAA,YAAA;;;;AAQzB,cAAA,MAAM,KAAG;qCACnB,QAAM,MAAM,GAAG,qEACdI,eAAA,MAAM,IAAI;;AAGD,kBAAA,SAAAA,eAAA,MAAM,IAAI,CAAA,SAAA;AAAA,UAAA;AAEoC,gBAAA,qEAAAA,eAAA,MAAM,MAAM,CAAA,MAAA;AACnE,cAAA,MAAM,OAAK;AAA+D,kBAAA,gEAAAA,eAAA,MAAM,KAAK,CAAA,MAAA;AAAA,UAAA;;;;;YAGxF,MAAK;AAAA,YAAyB,OAAM;AAAA,UAAA;uGAIzC,MAAM,aAAQ,kBAAuB,MAAM,WAAW,WAAW,MAAM,QAAQ,CAAA,CAAA,wBAAA;AAAA,QAAA;;kBAO3E,WAAU,OAAA;;;UACnB,MAAK;AAAA,UAAyB,OAAM;AAAA,QAAA;;;;;UAKpC,MAAK;AAAA,UAAe,OAAM;AAAA,QAAA;0EACa,WAAU,KAAA,CAAA,YAAA;AAAA,MAAA;;;;;;;;;;;","names":["_ssrRenderAttrs","_mergeProps","_ssrRenderList","_push","_parent","_createVNode","_ssrInterpolate","_toDisplayString","tag","className","delay","duration","direction","_ssrRenderAttr","_TransitionGroup","_openBlock","_createBlock","_Fragment","_renderList","disabled","text","_ssrRenderComponent"],"sources":["../../../../components/AnimatedSquares.vue","../../../../components/HomeBlogSection.vue","../../../../components/BlurText.vue","../../../../components/ShinyText.vue","../../../../components/AnimatedContent.vue","../../../../pages/index.vue"],"sourcesContent":["<template>\n  <canvas ref=\"canvasRef\" class=\"w-full h-full border-none block fixed top-0 left-0 -z-10\"></canvas>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\n\ntype CanvasStrokeStyle = string | CanvasGradient | CanvasPattern;\n\ninterface GridOffset {\n  x: number;\n  y: number;\n}\n\ninterface SquaresProps {\n  direction?: \"diagonal\" | \"up\" | \"right\" | \"down\" | \"left\";\n  speed?: number;\n  borderColor?: CanvasStrokeStyle;\n  squareSize?: number;\n  hoverFillColor?: CanvasStrokeStyle;\n}\n\nconst props = withDefaults(defineProps<SquaresProps>(), {\n  direction: \"right\",\n  speed: 0.5, // Default hızı 0.5 olarak değiştirdim, orijinal React kodunda 1 idi.\n  borderColor: \"#3f3f46\", // Daha koyu bir tema için border rengini zinc-700'e yakın ayarladım.\n  squareSize: 40,\n  hoverFillColor: \"#27272a\", // Hover rengini zinc-800'e yakın ayarladım.\n});\n\nconst canvasRef = ref<HTMLCanvasElement | null>(null);\nconst requestRef = ref<number | null>(null);\nconst numSquaresX = ref<number>(0);\nconst numSquaresY = ref<number>(0);\nconst gridOffset = ref<GridOffset>({ x: 0, y: 0 });\nconst hoveredSquareRef = ref<GridOffset | null>(null);\n\nconst drawGrid = () => {\n  const canvas = canvasRef.value;\n  if (!canvas) return;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) return;\n\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n  const startX = Math.floor(gridOffset.value.x / props.squareSize) * props.squareSize;\n  const startY = Math.floor(gridOffset.value.y / props.squareSize) * props.squareSize;\n\n  for (let i = 0; i < numSquaresX.value; i++) {\n    for (let j = 0; j < numSquaresY.value; j++) {\n      const squareX = i * props.squareSize - (gridOffset.value.x % props.squareSize);\n      const squareY = j * props.squareSize - (gridOffset.value.y % props.squareSize);\n\n      if (\n        hoveredSquareRef.value &&\n        i === hoveredSquareRef.value.x &&\n        j === hoveredSquareRef.value.y\n      ) {\n        ctx.fillStyle = props.hoverFillColor;\n        ctx.fillRect(squareX, squareY, props.squareSize, props.squareSize);\n      }\n\n      ctx.strokeStyle = props.borderColor;\n      ctx.strokeRect(squareX, squareY, props.squareSize, props.squareSize);\n    }\n  }\n\n  const gradient = ctx.createRadialGradient(\n    canvas.width / 2,\n    canvas.height / 2,\n    0,\n    canvas.width / 2,\n    canvas.height / 2,\n    Math.sqrt(canvas.width ** 2 + canvas.height ** 2) / 2\n  );\n  // Arka plan gradient'ını sitenin genel temasına uygun hale getirdim (çok koyu gri -> siyah)\n  gradient.addColorStop(0, \"rgba(10, 10, 10, 0)\"); // Daha yumuşak bir geçiş için alpha değeri\n  gradient.addColorStop(1, \"#09090b\"); // Tailwind zinc-950\n\n  ctx.fillStyle = gradient;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n};\n\nconst updateAnimation = () => {\n  const effectiveSpeed = Math.max(props.speed, 0.1);\n  switch (props.direction) {\n    case \"right\":\n      gridOffset.value.x = (gridOffset.value.x - effectiveSpeed + props.squareSize * numSquaresX.value) % (props.squareSize * numSquaresX.value); \n      break;\n    case \"left\":\n      gridOffset.value.x = (gridOffset.value.x + effectiveSpeed) % (props.squareSize * numSquaresX.value);\n      break;\n    case \"up\":\n      gridOffset.value.y = (gridOffset.value.y + effectiveSpeed) % (props.squareSize * numSquaresY.value);\n      break;\n    case \"down\":\n      gridOffset.value.y = (gridOffset.value.y - effectiveSpeed + props.squareSize * numSquaresY.value) % (props.squareSize * numSquaresY.value);\n      break;\n    case \"diagonal\":\n      gridOffset.value.x = (gridOffset.value.x - effectiveSpeed + props.squareSize * numSquaresX.value) % (props.squareSize * numSquaresX.value);\n      gridOffset.value.y = (gridOffset.value.y - effectiveSpeed + props.squareSize * numSquaresY.value) % (props.squareSize * numSquaresY.value);\n      break;\n    default:\n      break;\n  }\n\n  drawGrid();\n  requestRef.value = requestAnimationFrame(updateAnimation);\n};\n\nconst handleMouseMove = (event: MouseEvent) => {\n  const canvas = canvasRef.value;\n  if (!canvas) return;\n  const rect = canvas.getBoundingClientRect();\n  const mouseX = event.clientX - rect.left;\n  const mouseY = event.clientY - rect.top;\n\n  const hoveredSquareX = Math.floor((mouseX + (gridOffset.value.x % props.squareSize)) / props.squareSize);\n  const hoveredSquareY = Math.floor((mouseY + (gridOffset.value.y % props.squareSize)) / props.squareSize);\n\n  if (\n    hoveredSquareX >= 0 && hoveredSquareX < numSquaresX.value &&\n    hoveredSquareY >= 0 && hoveredSquareY < numSquaresY.value\n  ) {\n    if(\n      !hoveredSquareRef.value ||\n      hoveredSquareRef.value.x !== hoveredSquareX ||\n      hoveredSquareRef.value.y !== hoveredSquareY\n    ) {\n      hoveredSquareRef.value = { x: hoveredSquareX, y: hoveredSquareY };\n    }\n  } else {\n    hoveredSquareRef.value = null;\n  }\n};\n\nconst handleMouseLeave = () => {\n  hoveredSquareRef.value = null;\n};\n\nconst resizeCanvas = () => {\n  const canvas = canvasRef.value;\n  if (!canvas) return;\n  canvas.width = canvas.offsetWidth;\n  canvas.height = canvas.offsetHeight;\n  numSquaresX.value = Math.ceil(canvas.width / props.squareSize) + 1;\n  numSquaresY.value = Math.ceil(canvas.height / props.squareSize) + 1;\n  drawGrid(); // Yeniden boyutlandırmadan sonra hemen çiz\n};\n\nonMounted(() => {\n  const canvas = canvasRef.value;\n  if (!canvas) return;\n\n  resizeCanvas(); // İlk boyutlandırma\n  window.addEventListener(\"resize\", resizeCanvas);\n  \n  canvas.addEventListener(\"mousemove\", handleMouseMove);\n  canvas.addEventListener(\"mouseleave\", handleMouseLeave);\n  requestRef.value = requestAnimationFrame(updateAnimation);\n});\n\nonUnmounted(() => {\n  window.removeEventListener(\"resize\", resizeCanvas);\n  if (requestRef.value) {\n    cancelAnimationFrame(requestRef.value);\n  }\n  const canvas = canvasRef.value;\n  if (canvas) {\n    canvas.removeEventListener(\"mousemove\", handleMouseMove);\n    canvas.removeEventListener(\"mouseleave\", handleMouseLeave);\n  }\n});\n\n// Props değiştiğinde animasyonu ve çizimi yeniden başlatmak için watch kullanılabilir (isteğe bağlı)\nwatch(() => [props.direction, props.speed, props.borderColor, props.hoverFillColor, props.squareSize], () => {\n  // Animasyonu durdur ve yeniden başlat veya sadece çizimi güncelle\n  // Bu örnekte, basitlik adına sadece yeniden çizim yapılıyor, ancak daha karmaşık senaryolarda animasyonun sıfırlanması gerekebilir.\n  if (canvasRef.value) {\n     // Ayarlar değiştiğinde gridOffset'i sıfırlamak isteyebilirsiniz.\n    // gridOffset.value = { x: 0, y: 0 };\n    resizeCanvas(); // Boyutları ve kare sayılarını güncelleyip yeniden çizer\n  }\n}, { deep: true });\n\n</script>\n\n<style scoped>\n/* Canvas'ın tüm ekranı kaplaması ve diğer içeriklerin üzerinde olmaması için */\ncanvas {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw; /* Viewport width */\n  height: 100vh; /* Viewport height */\n  z-index: -1; /* Diğer içeriklerin arkasında kalması için */\n  display: block; /* Ekstra boşlukları engellemek için */\n}\n</style>\n","<template>\n  <div class=\"py-12 bg-white dark:bg-zinc-900\">\n    <div class=\"container mx-auto max-w-4xl\">\n      <h2 class=\"text-3xl font-medium text-center text-zinc-900 dark:text-zinc-200 mb-12\">\n        Latest Blog Posts\n      </h2>\n      <div v-if=\"posts && posts.length\" class=\"grid gap-8 md:grid-cols-2 lg:grid-cols-3\">\n        <div \n          v-for=\"post in posts\" \n          :key=\"post._path\"\n          class=\"bg-zinc-50 dark:bg-zinc-800/50 rounded-lg shadow-md hover:shadow-xl transition-shadow duration-300 ease-in-out flex flex-col overflow-hidden group\"\n        >\n          <NuxtLink :to=\"post._path\" class=\"block h-48 w-full overflow-hidden\" v-if=\"post.coverImage\">\n            <img :src=\"post.coverImage\" :alt=\"post.title || 'Blog post cover image'\" class=\"w-full h-full object-cover transition-transform duration-300 group-hover:scale-105\" />\n          </NuxtLink>\n          <div v-else class=\"h-48 w-full bg-zinc-200 dark:bg-zinc-700 flex items-center justify-center\">\n            <span class=\"text-zinc-500 dark:text-zinc-400 text-sm\">No Image Available</span>\n          </div>\n          <div class=\"p-6 flex flex-col flex-grow\">\n            <NuxtLink :to=\"post._path\" class=\"block\">\n              <h3 class=\"text-xl font-semibold text-zinc-800 dark:text-zinc-100 mb-2 group-hover:text-violet-500 dark:group-hover:text-violet-400 transition-colors\">\n                {{ post.title || 'Untitled Post' }}\n              </h3>\n            </NuxtLink>\n            <p v-if=\"post.description\" class=\"text-zinc-600 dark:text-zinc-400 text-sm mb-3 leading-relaxed flex-grow\">\n              {{ truncateDescription(post.description, 120) }}\n            </p>\n            <p v-else class=\"text-zinc-600 dark:text-zinc-400 text-sm mb-3 leading-relaxed flex-grow\">\n              No description available.\n            </p>\n            <div class=\"mt-auto pt-4 border-t border-zinc-200 dark:border-zinc-700/50\">\n              <div class=\"text-xs text-zinc-500 dark:text-zinc-500 mb-2\">\n                <span>{{ formatDate(post.date) }}</span>\n                <span v-if=\"post.tags && post.tags.length\" class=\"mx-1\">|</span>\n                <span v-if=\"post.tags && post.tags.length\" class=\"italic\">\n                  {{ post.tags.join(', ') }}\n                </span>\n              </div>\n              <NuxtLink :to=\"post._path\" class=\"inline-block text-sm text-violet-600 dark:text-violet-400 hover:underline font-medium\">\n                Read more &rarr;\n              </NuxtLink>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else-if=\"error\">\n        <p class=\"text-center text-red-500\">Could not load blog posts. Please try again later.</p>\n      </div>\n      <div v-else>\n        <p class=\"text-center text-zinc-500 dark:text-zinc-400\">No blog posts found yet. Stay tuned!</p>\n      </div>\n      <div class=\"text-center mt-12\">\n        <NuxtLink \n          to=\"/blog\" \n          class=\"px-6 py-3 bg-violet-600 hover:bg-violet-700 text-white rounded-md font-medium transition-colors duration-200\"\n        >\n          View All Posts\n        </NuxtLink>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted } from 'vue';\n\ninterface BlogPost {\n  _path: string;\n  title?: string;\n  description?: string;\n  date?: string;\n  tags?: string[];\n  coverImage?: string;\n  // Add other frontmatter fields you expect\n}\n\nconst posts = ref<BlogPost[] | null>(null);\nconst error = ref<any>(null);\n\nasync function fetchPosts() {\n  try {\n    const data = await queryContent<BlogPost>('/blog')\n      .sort({ date: -1 }) // Sort by date descending (newest first)\n      .limit(3)           // Get latest 3 posts\n      .find();\n    posts.value = data;\n  } catch (e) {\n    console.error('Error fetching blog posts:', e);\n    error.value = e;\n    posts.value = []; // Ensure posts is an empty array on error to hide loading/empty state\n  }\n}\n\nfunction formatDate(dateString?: string): string {\n  if (!dateString) return 'Date not available';\n  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };\n  return new Date(dateString).toLocaleDateString('en-US', options);\n}\n\nfunction truncateDescription(text?: string, maxLength: number = 120): string {\n  if (!text) return 'No description available.';\n  if (text.length <= maxLength) {\n    return text;\n  }\n  return text.substring(0, maxLength) + '...';\n}\n\nonMounted(() => {\n  fetchPosts();\n});\n</script>\n\n<style scoped>\n/* Add any component-specific styles here if needed */\n.group:hover .group-hover\\:text-violet-500 {\n  color: #8b5cf6; /* Ensure Tailwind JIT picks this up if not directly used */\n}\n</style>\n","<template>\n  <component :is=\"tag\" ref=\"targetRef\" :class=\"['blur-text-wrapper', className]\">\n    <TransitionGroup \n      tag=\"span\" \n      name=\"blur-segment\"\n      class=\"inline-block\"\n      @after-enter=\"checkIfLastAnimated\"\n    >\n      <span\n        v-for=\"(segment, index) in segments\"\n        :key=\"index\"\n        class=\"blur-text-segment inline-block\"\n        :style=\"{\n          '--segment-delay': `${index * delay}ms`,\n          '--segment-duration': `${duration}ms`,\n          '--initial-y': direction === 'top' ? '-20px' : '20px'\n        }\"\n        :data-index=\"index\"\n      >\n        {{ segment === ' ' ? '\\u00A0' : segment }}\n      </span>\n    </TransitionGroup>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, computed, onMounted } from 'vue';\nimport { useIntersectionObserver } from '@vueuse/core';\n\ninterface Props {\n  text: string;\n  tag?: string;\n  delay?: number; // Stagger delay for each segment in ms\n  duration?: number; // Animation duration for one segment in ms\n  className?: string;\n  animateBy?: 'words' | 'letters';\n  direction?: 'top' | 'bottom';\n  onAnimationComplete?: () => void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  tag: 'p',\n  delay: 100,\n  duration: 600,\n  animateBy: 'words',\n  direction: 'top',\n  className: '',\n});\n\nconst targetRef = ref<HTMLElement | null>(null);\nconst isInView = ref(false);\n\nconst segments = computed(() => {\n  if (props.animateBy === 'letters') {\n    return props.text.split('');\n  }\n  // For words, split by space and add spaces back for rendering\n  const words = props.text.split(' ');\n  const result: string[] = [];\n  words.forEach((word, index) => {\n    result.push(word);\n    if (index < words.length - 1) {\n      result.push(' '); // Add space as a separate segment\n    }\n  });\n  return result;\n});\n\nuseIntersectionObserver(\n  targetRef,\n  ([{ isIntersecting }]) => {\n    if (isIntersecting && !isInView.value) {\n      isInView.value = true;\n      // Apply class to wrapper to trigger animation for children\n      if (targetRef.value) {\n        targetRef.value.classList.add('in-view');\n      }\n    }\n  },\n  { threshold: 0.1 }\n);\n\nlet animatedCount = 0;\nconst checkIfLastAnimated = (el: Element) => {\n  // This event fires for each segment after it enters.\n  // We need to count them to know when all have finished.\n  animatedCount++;\n  if (animatedCount === segments.value.length) {\n    props.onAnimationComplete?.();\n  }\n};\n\nonMounted(() => {\n  // Reset for potential re-trigger if component is kept alive and re-observed\n  animatedCount = 0;\n});\n\n</script>\n\n<style scoped>\n.blur-text-wrapper {\n  display: flex; /* Changed to flex to handle word spacing better */\n  flex-wrap: wrap; /* Allow segments to wrap */\n}\n\n.blur-text-segment {\n  opacity: 0;\n  filter: blur(8px);\n  transform: translateY(var(--initial-y));\n  transition-property: opacity, filter, transform;\n  transition-timing-function: cubic-bezier(0.25, 0.1, 0.25, 1);\n  /* Default state, animation is triggered by parent .in-view class */\n}\n\n.blur-text-wrapper.in-view .blur-text-segment {\n  opacity: 1;\n  filter: blur(0px);\n  transform: translateY(0);\n  transition-duration: var(--segment-duration);\n  transition-delay: var(--segment-delay);\n}\n\n/* Ensure non-breaking spaces are rendered correctly if they are segments */\n.blur-text-segment:empty::before {\n  content: \"\\00a0\";\n}\n</style>\n","<template>\n  <component \n    :is=\"tag\"\n    :class=\"['shiny-text-wrapper bg-clip-text inline-block', { 'animate-shine': !disabled }, className]\"\n    :style=\"{\n      color: 'rgba(181, 181, 181, 0.64)', // Equivalent to text-[#b5b5b5a4]\n      backgroundImage: 'linear-gradient(120deg, rgba(255, 255, 255, 0) 40%, rgba(255, 255, 255, 0.8) 50%, rgba(255, 255, 255, 0) 60%)',\n      backgroundSize: '200% 100%',\n      WebkitBackgroundClip: 'text',\n      animationDuration: animationDuration,\n    }\"\n  >\n    {{ text }}\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed } from 'vue';\n\ninterface Props {\n  text: string;\n  tag?: string;\n  disabled?: boolean;\n  speed?: number; // Animation duration in seconds\n  className?: string;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  tag: 'div', // Default tag\n  disabled: false,\n  speed: 5,\n  className: '',\n});\n\nconst animationDuration = computed(() => `${props.speed}s`);\n\n</script>\n\n<style scoped>\n/* Tailwind's JIT mode should pick up 'animate-shine' if defined in tailwind.config.js */\n/* No additional scoped styles needed if Tailwind animation is set up correctly. */\n.shiny-text-wrapper {\n  /* Ensure text color is applied if not using bg-clip-text for some reason or as fallback */\n  /* color: transparent; */ /* This might be needed if text color isn't properly handled by bg-clip */\n}\n</style>\n","<template>\n  <div ref=\"animatedRef\">\n    <slot></slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, watch } from 'vue';\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from 'gsap/ScrollTrigger';\n\ngsap.registerPlugin(ScrollTrigger);\n\ninterface Props {\n  distance?: number;\n  direction?: 'vertical' | 'horizontal';\n  reverse?: boolean;\n  duration?: number;\n  ease?: string | ((progress: number) => number);\n  initialOpacity?: number;\n  animateOpacity?: boolean;\n  scale?: number;\n  threshold?: number;\n  delay?: number;\n  onComplete?: () => void;\n}\n\nconst props = withDefaults(defineProps<Props>(), {\n  distance: 100,\n  direction: 'vertical',\n  reverse: false,\n  duration: 0.8,\n  ease: 'power3.out',\n  initialOpacity: 0,\n  animateOpacity: true,\n  scale: 1,\n  threshold: 0.1, // Percentage of element in view to trigger\n  delay: 0,\n});\n\nconst animatedRef = ref<HTMLDivElement | null>(null);\nlet scrollTriggerInstance: ScrollTrigger | null = null;\nlet tweenInstance: gsap.core.Tween | null = null;\n\nconst animate = () => {\n  const el = animatedRef.value;\n  if (!el) return;\n\n  // Kill previous instances if re-animating (e.g., due to prop changes)\n  if (scrollTriggerInstance) {\n    scrollTriggerInstance.kill();\n  }\n  if (tweenInstance) {\n    tweenInstance.kill();\n  }\n\n  const axis = props.direction === 'horizontal' ? 'x' : 'y';\n  const offset = props.reverse ? -props.distance : props.distance;\n  const startPct = (1 - props.threshold) * 100;\n\n  gsap.set(el, {\n    [axis]: offset,\n    scale: props.scale,\n    opacity: props.animateOpacity ? props.initialOpacity : 1,\n  });\n\n  tweenInstance = gsap.to(el, {\n    [axis]: 0,\n    scale: 1,\n    opacity: 1,\n    duration: props.duration,\n    ease: props.ease,\n    delay: props.delay,\n    onComplete: props.onComplete,\n    scrollTrigger: {\n      trigger: el,\n      start: `top ${startPct}%`,\n      toggleActions: 'play none none none',\n      once: true,\n      onEnter: () => {\n        // console.log('ScrollTrigger entered for:', el);\n      },\n    },\n  });\n  scrollTriggerInstance = tweenInstance.scrollTrigger;\n};\n\nonMounted(() => {\n  // Ensure DOM is ready\n  if (animatedRef.value) {\n    animate();\n  }\n});\n\n// Watch for prop changes that might require re-initializing the animation\nwatch(\n  () => [\n    props.distance,\n    props.direction,\n    props.reverse,\n    props.duration,\n    props.ease,\n    props.initialOpacity,\n    props.animateOpacity,\n    props.scale,\n    props.threshold,\n    props.delay,\n  ],\n  () => {\n    if (animatedRef.value) {\n      animate(); // Re-run animation setup if props change\n    }\n  },\n  { deep: true }\n);\n\nonUnmounted(() => {\n  if (scrollTriggerInstance) {\n    scrollTriggerInstance.kill();\n  }\n  if (tweenInstance) {\n    tweenInstance.kill();\n  }\n  // Clean up all ScrollTriggers associated with the element, just in case\n  if (animatedRef.value) {\n    ScrollTrigger.getAll().forEach(trigger => {\n      if (trigger.trigger === animatedRef.value) {\n        trigger.kill();\n      }\n    });\n    gsap.killTweensOf(animatedRef.value);\n  }\n});\n\n</script>\n\n<style scoped>\n/* Add any specific styles for the wrapper if needed */\ndiv {\n  /* Default to visible to prevent issues if JS fails, GSAP will handle initial state */\n  visibility: visible; \n}\n</style>\n","<template>\n  <div class=\"relative pt-32 pb-16 bg-white dark:bg-zinc-900 overflow-hidden z-0\">\n    <AnimatedSquares class=\"fixed top-0 left-0 w-full h-full z-[-1] pointer-events-none\" />\n    <div class=\"container mx-auto max-w-4xl\">\n      <div class=\"flex flex-col gap-20\">\n        <div class=\"space-y-6\">\n          <BlurText \n            text=\"Hi, I am İhsan Baki Doğan\"\n            tag=\"h1\"\n            class-name=\"text-3xl font-medium text-zinc-900 dark:text-zinc-200\"\n            :delay=\"100\"\n            animate-by=\"words\"\n            direction=\"top\"\n          />\n\n          <div class=\"flex items-center gap-3\">\n            <span class=\"inline-flex items-center gap-2 px-2.5 py-1 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-sm text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50\">\n              <span class=\"w-2 h-2 rounded-full\" :class=\"isOnline ? 'bg-emerald-500' : 'bg-red-500'\"></span>\n              {{ isOnline ? 'Online' : 'Offline' }}\n            </span>\n            <span v-if=\"lastPlayedTrack\" class=\"inline-flex items-center px-2.5 py-1 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-sm text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50\">\n              <span class=\"inline-flex items-center\">\n                <Icon name=\"simple-icons:lastdotfm\" class=\"w-4 h-4 text-[#d51007] mr-0\" />\n                <Icon name=\"ph:music-note-simple-fill\" class=\"w-4 h-4 text-zinc-700 dark:text-zinc-300 ml-0\" />\n              </span>\n              <template v-if=\"lastPlayedTrack.url\">\n                <a :href=\"lastPlayedTrack.url\" target=\"_blank\" class=\"hover:text-violet-400 transition-colors duration-200 ml-2\">\n                  {{ lastPlayedTrack.name }} - {{ lastPlayedTrack.artist }}\n                  <span v-if=\"lastPlayedTrack.nowPlaying\" class=\"text-xs text-emerald-500\">(şimdi çalıyor)</span>\n                  <span v-else class=\"text-xs text-zinc-500\">(son çalan)</span>\n                </a>\n              </template>\n              <span v-else class=\"ml-2\">\n                {{ lastPlayedTrack.name }} - {{ lastPlayedTrack.artist }}\n                <span v-if=\"lastPlayedTrack.nowPlaying\" class=\"text-xs text-emerald-500\">(şimdi çalıyor)</span>\n                <span v-else class=\"text-xs text-zinc-500\">(son çalan)</span>\n              </span>\n            </span>\n            <span v-else-if=\"!fetchError && !lastPlayedTrack\" class=\"inline-flex items-center gap-2 px-2.5 py-1 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-sm text-zinc-500 border border-zinc-200 dark:border-zinc-700/50\">\n                <Icon name=\"simple-icons:lastdotfm\" class=\"w-4 h-4 text-[#d51007]\" />\n                <span>Müzik aktivitesi yok</span>\n            </span>\n            <span v-else-if=\"fetchError\" class=\"inline-flex items-center gap-2 px-2.5 py-1 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-sm text-red-500 dark:text-red-400 border border-zinc-200 dark:border-zinc-700/50\">\n                <Icon name=\"carbon:error\" class=\"w-4 h-4\" /> <!-- Changed to error icon -->\n                <span>Veri alınamadı</span>\n            </span>\n          </div>\n\n          <ShinyText \n            text=\"Full Stack Web Developer - in ❤️ with Node.js, TypeScript, React.js and Vue.js - 🇹🇷\"\n            tag=\"p\"\n            class-name=\"text-base text-zinc-600 dark:text-zinc-400\"\n            :speed=\"8\"\n          />\n\n          <AnimatedContent\n            :distance=\"50\"\n            direction=\"horizontal\"\n            :duration=\"0.8\"\n            :delay=\"0.2\"\n            ease=\"power2.out\"\n          >\n            <div class=\"flex items-center gap-3\">\n            <a href=\"mailto:info@ihsanbakidogan.com\" class=\"inline-flex items-center gap-2 px-4 py-2 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n              <Icon name=\"carbon:email\" class=\"text-base\" />\n              Contact\n            </a>\n\n            <div class=\"flex items-center gap-2\">\n              <a href=\"https://github.com/ibidi\" target=\"_blank\" class=\"inline-flex items-center justify-center w-10 h-10 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <Icon name=\"carbon:logo-github\" class=\"text-xl\" />\n              </a>\n              <a href=\"https://twitter.com/ibidicodes\" target=\"_blank\" class=\"inline-flex items-center justify-center w-10 h-10 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <Icon name=\"carbon:logo-twitter\" class=\"text-xl\" />\n              </a>\n              <a href=\"https://linkedin.com/in/ibidi\" target=\"_blank\" class=\"inline-flex items-center justify-center w-10 h-10 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <Icon name=\"carbon:logo-linkedin\" class=\"text-xl\" />\n              </a>\n              <a href=\"https://instagram.com/ihsanbakidogann\" target=\"_blank\" class=\"inline-flex items-center justify-center w-10 h-10 bg-zinc-100 dark:bg-zinc-800/50 rounded-md text-zinc-600 dark:text-zinc-400 border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <Icon name=\"carbon:logo-instagram\" class=\"text-xl\" />\n              </a>\n            </div>\n          </div>\n          </AnimatedContent>\n        </div>\n\n        <!-- Experience & Education -->\n        <div class=\"grid gap-8 md:grid-cols-2\">\n          <!-- Experience -->\n          <div class=\"space-y-4\">\n            <h2 class=\"text-2xl font-medium text-zinc-900 dark:text-zinc-200\">Experience</h2>\n            <div class=\"space-y-4\">\n              <div v-for=\"job in jobs\" :key=\"job.id\" class=\"group\">\n                <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                  <div class=\"space-y-4\">\n                    <div class=\"flex items-center gap-3\">\n                      <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                        <img :src=\"job.image\" :alt=\"job.company\" class=\"w-full h-full object-contain\" />\n                      </div>\n                      <div>\n                        <div class=\"flex items-center gap-2\">\n                          <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">{{ job.company }}</h3>\n                          <span v-if=\"job.isPresent\" class=\"px-2 py-0.5 text-xs bg-violet-500/10 text-violet-500 rounded\">PRESENT</span>\n                        </div>\n                        <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">{{ job.title }}</p>\n                        <p class=\"text-sm text-zinc-500 dark:text-zinc-500\">{{ job.date }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Education -->\n          <div class=\"space-y-4\">\n            <h2 class=\"text-2xl font-medium text-zinc-900 dark:text-zinc-200\">Education</h2>\n            <div class=\"space-y-4\">\n              <div v-for=\"education in educations\" :key=\"education.id\" class=\"group\">\n                <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                  <div class=\"space-y-4\">\n                    <div class=\"flex items-center gap-3\">\n                      <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                        <img :src=\"education.image\" :alt=\"education.school\" class=\"w-full h-full object-contain\" />\n                      </div>\n                      <div>\n                        <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">{{ education.school }}</h3>\n                        <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">{{ education.field }}</p>\n                        <p class=\"text-sm text-zinc-500 dark:text-zinc-500\">{{ education.date }}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Technologies -->\n        <div class=\"space-y-4\">\n          <h2 class=\"text-2xl font-medium text-zinc-900 dark:text-zinc-200\">Technologies I Use</h2>\n          <div class=\"grid gap-4 md:grid-cols-2\">\n            <!-- Frontend -->\n            <div class=\"group\">\n              <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <div class=\"space-y-4\">\n                  <div class=\"flex items-center gap-3\">\n                    <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                      <Icon name=\"carbon:application-web\" class=\"text-base text-violet-500\" />\n                    </div>\n                    <div>\n                      <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">Frontend</h3>\n                      <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">Vue.js, React.js, TypeScript, TailwindCSS</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Backend -->\n            <div class=\"group\">\n              <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <div class=\"space-y-4\">\n                  <div class=\"flex items-center gap-3\">\n                    <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                      <Icon name=\"carbon:data-base\" class=\"text-base text-violet-500\" />\n                    </div>\n                    <div>\n                      <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">Backend</h3>\n                      <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">Node.js, PHP, MySQL, MongoDB</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Tools -->\n            <div class=\"group\">\n              <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <div class=\"space-y-4\">\n                  <div class=\"flex items-center gap-3\">\n                    <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                      <Icon name=\"carbon:tools\" class=\"text-base text-violet-500\" />\n                    </div>\n                    <div>\n                      <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">Tools</h3>\n                      <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">VS Code, Git, Docker, Figma</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- Cloud -->\n            <div class=\"group\">\n              <div class=\"block p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <div class=\"space-y-4\">\n                  <div class=\"flex items-center gap-3\">\n                    <div class=\"w-10 h-10 rounded-md bg-violet-500/10 flex items-center justify-center\">\n                      <Icon name=\"carbon:cloud\" class=\"text-base text-violet-500\" />\n                    </div>\n                    <div>\n                      <h3 class=\"text-base font-medium text-zinc-900 dark:text-zinc-200\">Cloud</h3>\n                      <p class=\"text-sm text-zinc-600 dark:text-zinc-400\">AWS, Netlify, Vercel, DigitalOcean</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <HomeBlogSection />\n\n        <!-- Recently Listened Songs -->\n        <div class=\"space-y-6\">\n          <div class=\"flex items-center justify-between\">\n            <h2 class=\"text-2xl font-medium text-zinc-900 dark:text-zinc-200\">Recently Listened Songs</h2>\n            <a \n              href=\"https://www.last.fm/user/ibidi\" \n              target=\"_blank\"\n              class=\"inline-flex items-center gap-2 px-3 py-1.5 text-sm text-zinc-600 dark:text-zinc-400 bg-zinc-100 dark:bg-zinc-800/50 rounded-md border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\"\n            >\n              <Icon name=\"simple-icons:lastdotfm\" class=\"w-4 h-4 text-[#d51007]\" />\n              Last.fm Profile\n            </a>\n          </div>\n          \n          <div v-if=\"recentTracks.length > 0\" class=\"grid gap-4 md:grid-cols-2\">\n            <div \n              v-for=\"track in recentTracks\" \n              :key=\"`${track.name}-${track.artist}`\"\n              class=\"group\"\n            >\n              <div class=\"flex items-center gap-4 p-4 bg-zinc-100 dark:bg-zinc-800/50 rounded-lg border border-zinc-200 dark:border-zinc-700/50 transition-all duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-800\">\n                <div class=\"w-12 h-12 rounded-md bg-zinc-200 dark:bg-zinc-700 flex-shrink-0 overflow-hidden\">\n                  <img \n                    v-if=\"track.albumArt\" \n                    :src=\"track.albumArt\" \n                    :alt=\"`${track.name} album art`\"\n                    class=\"w-full h-full object-cover\"\n                    loading=\"lazy\"\n                  />\n                  <div v-else class=\"w-full h-full flex items-center justify-center\">\n                    <Icon name=\"ph:music-note-simple-fill\" class=\"w-6 h-6 text-zinc-400\" />\n                  </div>\n                </div>\n                \n                <div class=\"min-w-0 flex-1\">\n                  <div class=\"flex items-start justify-between gap-2\">\n                    <div class=\"min-w-0 flex-1\">\n                      <h3 class=\"font-medium text-zinc-900 dark:text-zinc-100 truncate\">\n                        <template v-if=\"track.url\">\n                          <a :href=\"track.url\" target=\"_blank\" class=\"hover:text-violet-500 transition-colors\">\n                            {{ track.name }}\n                          </a>\n                        </template>\n                        <span v-else>{{ track.name }}</span>\n                      </h3>\n                      <p class=\"text-sm text-zinc-600 dark:text-zinc-400 truncate\">{{ track.artist }}</p>\n                      <p v-if=\"track.album\" class=\"text-xs text-zinc-500 dark:text-zinc-500 truncate\">{{ track.album }}</p>\n                    </div>\n                    <div class=\"flex-shrink-0\">\n                      <Icon name=\"simple-icons:lastdotfm\" class=\"w-4 h-4 text-[#d51007]\" />\n                    </div>\n                  </div>\n                  <p class=\"text-xs text-zinc-400 dark:text-zinc-500 mt-1\">\n                    {{ track.playedAt === 'Şimdi çalıyor' ? track.playedAt : formatDate(track.playedAt) }}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          \n          <div v-else-if=\"!fetchError\" class=\"text-center py-8\">\n            <Icon name=\"simple-icons:lastdotfm\" class=\"w-12 h-12 text-[#d51007] mx-auto mb-3\" />\n            <p class=\"text-zinc-600 dark:text-zinc-400\">Henüz şarkı dinlememiş görünüyorsunuz</p>\n          </div>\n          \n          <div v-else class=\"text-center py-8\">\n            <Icon name=\"carbon:error\" class=\"w-12 h-12 text-red-500 mx-auto mb-3\" />\n            <p class=\"text-red-600 dark:text-red-400\">{{ fetchError }}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { ref, onMounted, onUnmounted, computed } from 'vue';\nimport AnimatedSquares from '~/components/AnimatedSquares.vue';\nimport HomeBlogSection from '~/components/HomeBlogSection.vue';\nimport BlurText from '~/components/BlurText.vue';\nimport ShinyText from '~/components/ShinyText.vue';\nimport AnimatedContent from '~/components/AnimatedContent.vue';\n\nconst config = useRuntimeConfig();\nconst apiKey = config.public.lastFmApiKey;\nconst username = config.public.lastFmUsername;\nconst LASTFM_API_BASE_URL = 'https://ws.audioscrobbler.com/2.0/';\n\ninterface LastPlayedTrack {\n  name: string;\n  artist: string;\n  url?: string;\n  nowPlaying?: boolean;\n  albumArt?: string;\n}\n\ninterface RecentTrack {\n  name: string;\n  artist: string;\n  album: string;\n  url?: string;\n  albumArt?: string;\n  playedAt?: string;\n}\n\nconst lastPlayedTrack = ref<LastPlayedTrack | null>(null);\nconst recentTracks = ref<RecentTrack[]>([]);\nconst fetchError = ref<string | null>(null);\n\nconst isOnline = computed(() => !!lastPlayedTrack.value?.nowPlaying);\n\nfunction formatDate(dateString?: string) {\n  if (!dateString) return '';\n  try {\n    const date = new Date(dateString);\n    const now = new Date();\n    const diffTime = Math.abs(now.getTime() - date.getTime());\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    \n    if (diffDays === 1) {\n      return 'Dün';\n    } else if (diffDays < 7) {\n      return `${diffDays} gün önce`;\n    } else {\n      return date.toLocaleDateString('tr-TR', {\n        day: 'numeric',\n        month: 'short'\n      });\n    }\n  } catch {\n    return dateString;\n  }\n}\n\nasync function fetchLastPlayedTrack() {\n  if (!apiKey || !username) {\n    fetchError.value = 'Last.fm API anahtarı veya kullanıcı adı yapılandırılmamış.';\n    console.error(fetchError.value);\n    return;\n  }\n  try {\n    const params = new URLSearchParams({\n      method: 'user.getrecenttracks',\n      user: username,\n      api_key: apiKey,\n      format: 'json',\n      limit: '1'\n    }).toString();\n\n    const response = await $fetch<any>(`${LASTFM_API_BASE_URL}?${params}`);\n\n    if (response && response.recenttracks && response.recenttracks.track && response.recenttracks.track.length > 0) {\n      const track = response.recenttracks.track[0];\n      lastPlayedTrack.value = {\n        name: track.name,\n        artist: track.artist['#text'],\n        url: track.url,\n        nowPlaying: track['@attr']?.nowplaying === 'true',\n        albumArt: track.image?.find((img: any) => img.size === 'medium')?.['#text']\n      };\n    } else {\n      lastPlayedTrack.value = null; // No recent tracks or unexpected response\n    }\n  } catch (err: any) {\n    console.error('Error fetching Last.fm recent track:', err);\n    fetchError.value = `Last.fm verisi alınamadı: ${err.message}`;\n    lastPlayedTrack.value = null;\n  }\n}\n\nasync function fetchRecentTracks() {\n  if (!apiKey || !username) {\n    return;\n  }\n  try {\n    const params = new URLSearchParams({\n      method: 'user.getrecenttracks',\n      user: username,\n      api_key: apiKey,\n      format: 'json',\n      limit: '8'\n    }).toString();\n\n    const response = await $fetch<any>(`${LASTFM_API_BASE_URL}?${params}`);\n\n    if (response && response.recenttracks && response.recenttracks.track) {\n      const tracks = Array.isArray(response.recenttracks.track) \n        ? response.recenttracks.track \n        : [response.recenttracks.track];\n      \n      recentTracks.value = tracks.map((track: any) => ({\n        name: track.name,\n        artist: track.artist['#text'],\n        album: track.album['#text'] || '',\n        url: track.url,\n        albumArt: track.image?.find((img: any) => img.size === 'medium')?.['#text'],\n        playedAt: track.date?.['#text'] || 'Şimdi çalıyor'\n      }));\n    }\n  } catch (err: any) {\n    console.error('Error fetching recent tracks:', err);\n  }\n}\n\nlet refreshInterval: NodeJS.Timeout | null = null;\n\nonMounted(() => {\n  fetchLastPlayedTrack();\n  fetchRecentTracks();\n  // Refresh every 30 seconds (30000 milliseconds)\n  refreshInterval = setInterval(() => {\n    fetchLastPlayedTrack();\n    fetchRecentTracks();\n  }, 30000);\n});\n\nonUnmounted(() => {\n  if (refreshInterval) {\n    clearInterval(refreshInterval);\n  }\n});\n\nconst animatedCodeBackground = ref<HTMLElement | null>(null);\nconst codeSnippets = [\n  'const', 'let', 'var', 'function', '=>', 'async', 'await',\n  'import', 'export', 'default', 'React', 'Vue', 'Angular',\n  '<div>', '<span>', '<p>', '<h1>', 'useEffect', 'useState',\n  'computed', 'watch', 'ref', 'props', 'class', 'interface',\n  'type', 'enum', 'public', 'private', 'protected', 'static',\n  'return', 'if', 'else', 'for', 'while', 'switch', 'case',\n  'break', 'continue', 'try', 'catch', 'finally', 'throw',\n  'new', 'this', 'super', 'extends', 'implements', 'package',\n  'null', 'undefined', 'true', 'false', 'NaN', 'Infinity',\n  'JSON.parse', 'JSON.stringify', 'console.log', 'fetch',\n  'axios', 'Promise', '.then()', '.catch()', 'Array.map',\n  'Array.filter', 'Array.reduce', '{...obj}', '[...arr]',\n  'CSS', 'HTML', 'JS', 'TS', 'Python', 'Java', 'C#', 'C++',\n  'Ruby', 'Go', 'Rust', 'SQL', 'NoSQL', 'API', 'REST', 'GraphQL',\n  'Docker', 'K8s', 'AWS', 'Azure', 'GCP', 'git', 'npm', 'yarn',\n  'webpack', 'babel', 'tailwind', 'bootstrap', '0x', '// TODO:',\n  '/* comment */', 'Error', 'Exception', 'module.exports'\n];\n\nonMounted(() => {\n  fetchLastPlayedTrack();\n  refreshInterval = setInterval(fetchLastPlayedTrack, 30000);\n\n  const backgroundContainer = document.getElementById('animated-code-background');\n  if (backgroundContainer) {\n    const numberOfSnippets = 70; // Adjust for density\n    for (let i = 0; i < numberOfSnippets; i++) {\n      const snippetElement = document.createElement('span');\n      snippetElement.innerText = codeSnippets[Math.floor(Math.random() * codeSnippets.length)];\n      snippetElement.style.position = 'absolute';\n      snippetElement.style.left = `${Math.random() * 100}%`;\n      snippetElement.style.top = `${Math.random() * 100}%`; // Start at random positions\n      snippetElement.style.fontSize = `${Math.random() * 10 + 8}px`; // e.g., 8px to 18px\n      snippetElement.style.animationName = 'drift';\n      snippetElement.style.animationDuration = `${Math.random() * 20 + 15}s`; // 15s to 35s\n      snippetElement.style.animationDelay = `${Math.random() * 15}s`; // 0s to 15s delay\n      snippetElement.style.animationIterationCount = 'infinite';\n      snippetElement.style.animationTimingFunction = 'linear';\n      snippetElement.style.opacity = '0'; // Animation will handle fade in\n      backgroundContainer.appendChild(snippetElement);\n    }\n  }\n});\n\n// SEO\nuseSeo({\n  title: 'İhsan Baki Doğan - Full Stack Developer',\n  description: 'Full Stack Developer with expertise in Vue.js, Node.js, and modern web technologies. Check out my portfolio and blog.',\n})\n\ninterface Job {\n  id: number\n  company: string\n  title: string\n  date: string\n  image: string // Changed from icon to image\n  isPresent?: boolean\n}\n\ninterface Education {\n  id: number\n  school: string\n  field: string\n  date: string\n  image: string // Added image property\n}\n\nconst jobs: Job[] = [\n  {\n    id: 1,\n    company: 'Demirayak Yazılım',\n    title: 'Full Stack Developer / Co-Founder',\n    date: '2019-Present',\n    image: '/images/experience/demirayak.png', // Placeholder image path\n    isPresent: true\n  },\n  {\n    id: 2,\n    company: 'Hayati Kodla',\n    title: 'Full Stack Developer / Operation Manager',\n    date: '2024-Present',\n    image: '/images/experience/hayatikodla.png', // Placeholder image path\n    isPresent: true\n  },\n  {\n    id: 3,\n    company: 'Aksis Güzellik Salonları',\n    title: 'Full Stack Developer / Social Media Expert',\n    date: '2023-Present',\n    image: '/images/experience/aksis.jpeg', // Placeholder image path\n    isPresent: true\n  },\n  {\n    id: 4,\n    company: 'ASEDE',\n    title: 'Full Stack Developer',\n    date: '2022-2025',\n    image: '/images/experience/asede.PNG', // Placeholder image path\n    isPresent: true\n  },\n  {\n    id: 5,\n    company: 'Not Bilgi Teknolojileri',\n    title: 'Full Stack Developer / Social Media Expert',\n    date: '2022-2024',\n    image: '/images/experience/not-bilgi.png' // Placeholder image path\n  },\n  {\n    id: 6,\n    company: \"Oguzkaan Koleji\",\n    title: \"Information Technology Teacher / IT Specialist\",\n    date: '2022-2024',\n    image: '/images/experience/oguzkaan.png' // Placeholder image path\n  }\n]\n\nconst educations: Education[] = [\n  {\n    id: 1,\n    school: 'Istanbul Gelisim University',\n    field: 'Computer Programming',\n    date: '2019-2021',\n    image: '/images/education/gelisim.png' // Placeholder image path\n  },\n  {\n    id: 2,\n    school: 'Anadolu University',\n    field: 'Web Design and Development',\n    date: '2023-2025',\n    image: '/images/education/anadolu.png' // Placeholder image path\n  },\n  {\n    id: 3,\n    school: 'Istanbul University',\n    field: 'Medical Documentation and Secretarial Services',\n    date: '2022-2024',\n    image: '/images/education/istanbul.png' // Placeholder image path\n  }\n]\n</script>\n\n<style lang=\"postcss\">\n@keyframes gradient-x {\n  0% {\n    background-size: 200% 100%;\n    background-position: 0% 0%;\n  }\n  100% {\n    background-size: 200% 100%;\n    background-position: -200% 0%;\n  }\n}\n\n.animate-gradient-x {\n  animation: gradient-x 3s linear infinite;\n}\n\n#animated-code-background span {\n  font-family: 'Menlo', 'Monaco', 'Consolas', 'Liberation Mono', 'Courier New', monospace;\n  user-select: none;\n  /* Base color will be set by dark/light mode specific styles */\n}\n\n.dark #animated-code-background span {\n  color: rgba(200, 200, 220, 0.1); /* Light text on dark bg, 90% transparent -> 10% opacity */\n}\n\nhtml:not(.dark) #animated-code-background span {\n  color: rgba(50, 50, 70, 0.1); /* Dark text on light bg, 90% transparent -> 10% opacity */\n}\n\n@keyframes drift {\n  0% {\n    transform: translateY(15vh) translateX(0vw) rotate(0deg);\n    opacity: 0;\n  }\n  10%, 90% {\n    /* Target opacity is 0.3 (70% transparent), but color already has low alpha. */\n    /* Let's make it slightly more visible during animation if base alpha is low */\n    opacity: 1; /* The color's alpha will dictate the actual visibility */\n  }\n  100% {\n    transform: translateY(-100vh) translateX(calc(var(--random-drift-x, 0) * 1vw)) rotate(calc(var(--random-rotate, 0) * 1deg));\n    opacity: 0;\n  }\n}\n\n/* Add this if you want varied horizontal drift and rotation */\n/* In the onMounted script, you would add: */\n/* snippetElement.style.setProperty('--random-drift-x', (Math.random() * 20 - 10).toString()); */\n/* snippetElement.style.setProperty('--random-rotate', (Math.random() * 60 - 30).toString()); */\n\n::selection {\n  @apply bg-violet-500/20 text-violet-200;\n}\n\n::-moz-selection {\n  @apply bg-violet-500/20 text-violet-200;\n}\n</style>\n"],"version":3}